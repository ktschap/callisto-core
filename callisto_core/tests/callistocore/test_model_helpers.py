from django.conf import settings
from django.test import TestCase

from callisto_core.delivery import model_helpers
from callisto_core.delivery.hashers import PBKDF2KeyHasher, make_key


class ModelHelpersTest(TestCase):
    TEST_PREFIX = "test$prefix$abcdef"

    # TEST_SALT results in EXPECTED_KEY for model_helpers.UNUSED_PREFIX_PASSWORD
    # (generated by PBKDF2KeyHasher.encode)
    TEST_SALT = "saltsaltsalt"
    EXPECTED_KEY = b'J\xe3>\x04\x88\x19\x94\xaby\x9a\xd4\x14Z\xc8\x12|\xea7M5*w\xf3\x9f\xbc\x1b\x86\xde\x99n\x9d\xc6'

    def check_salt_no_matter_with_prefix(self, salt):
        pre = model_helpers.ensure_encode_prefix(self.TEST_PREFIX, salt)
        self.assertEqual(self.TEST_PREFIX, pre)

    def test_ensure_encode_prefix_with_prefix(self):
        self.check_salt_no_matter_with_prefix(None)
        self.check_salt_no_matter_with_prefix(self.TEST_SALT)
        self.check_salt_no_matter_with_prefix("")

    def test_ensure_encode_prefix_bad_input(self):
        with self.assertRaises(model_helpers.EncodePrefixException):
            model_helpers.ensure_encode_prefix(None, None)

    def test_ensure_encode_prefix_only_salt(self):
        pre = model_helpers.ensure_encode_prefix(
            None,
            self.TEST_SALT
        )
        self.assertEqual("%s$%d$%s" % (PBKDF2KeyHasher.algorithm, settings.ORIGINAL_KEY_ITERATIONS, self.TEST_SALT), pre)
        # ensure prefix compatible with our make_key operation
        key = make_key(pre, model_helpers.UNUSED_PREFIX_PASSWORD)
        self.assertEqual(self.EXPECTED_KEY, key)
        key = make_key(pre, "incorrect password")
        self.assertNotEqual(self.EXPECTED_KEY, key)
